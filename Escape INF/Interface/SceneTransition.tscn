[gd_scene load_steps=6 format=2]

[ext_resource path="res://Interface/SceneTransition.gd" type="Script" id=1]

[sub_resource type="Animation" id=16]
resource_name = "In"
length = 0.3
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath(".:material:shader_param/circle_size")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.25, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 1.05, 0.0, 0.0 ]
}

[sub_resource type="Animation" id=17]
resource_name = "Out"
length = 0.25
step = 0.25
tracks/0/type = "value"
tracks/0/path = NodePath(".:material:shader_param/circle_size")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.25 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.05 ]
}

[sub_resource type="Shader" id=14]
code = "shader_type canvas_item;
render_mode unshaded;

uniform float circle_size : hint_range(0.0, 1.05);
uniform float screen_width = 320;
uniform float screen_height = 180;

void fragment() {
	float ratio = screen_width / screen_height;
	float dist = distance(vec2(0.5, 0.5), vec2(mix(0.5, UV.x, ratio), UV.y));
	COLOR.a = step(circle_size, dist);
}"

[sub_resource type="ShaderMaterial" id=15]
shader = SubResource( 14 )
shader_param/circle_size = 1.05
shader_param/screen_width = 320.0
shader_param/screen_height = 180.0

[node name="SceneTransition" type="CanvasLayer"]
script = ExtResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../ColorRect")
anims/In = SubResource( 16 )
anims/Out = SubResource( 17 )

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource( 15 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
color = Color( 0, 0, 0, 1 )
